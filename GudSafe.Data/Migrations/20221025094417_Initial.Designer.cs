// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GudSafe.Data.Migrations
{
    [DbContext(typeof(GudSafeContext))]
    [Migration("20221025094417_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("GudCollectionGudFile", b =>
                {
                    b.Property<ulong>("CollectionsID")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("FilesID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionsID", "FilesID");

                    b.HasIndex("FilesID");

                    b.ToTable("GudCollectionGudFile");
                });

            modelBuilder.Entity("GudSafe.Data.Entities.GudCollection", b =>
                {
                    b.Property<ulong>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UniqueId")
                        .IsUnique();

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("GudSafe.Data.Entities.GudFile", b =>
                {
                    b.Property<ulong>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.HasIndex("UniqueId")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("GudSafe.Data.Entities.User", b =>
                {
                    b.Property<ulong>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("LastChangedTicks")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserRole")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ApiKey")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UniqueId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GudCollectionGudFile", b =>
                {
                    b.HasOne("GudSafe.Data.Entities.GudCollection", null)
                        .WithMany()
                        .HasForeignKey("CollectionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GudSafe.Data.Entities.GudFile", null)
                        .WithMany()
                        .HasForeignKey("FilesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GudSafe.Data.Entities.GudCollection", b =>
                {
                    b.HasOne("GudSafe.Data.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("GudSafe.Data.Entities.GudFile", b =>
                {
                    b.HasOne("GudSafe.Data.Entities.User", "Creator")
                        .WithMany("FilesUploaded")
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("GudSafe.Data.Entities.User", b =>
                {
                    b.Navigation("FilesUploaded");
                });
#pragma warning restore 612, 618
        }
    }
}
