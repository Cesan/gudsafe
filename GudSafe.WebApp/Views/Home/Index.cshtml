@{
    ViewData["Title"] = "GudSafe - Homepage";
}

@if (ViewBag.LoggedIn)
{
    <form id="uploadFile">
        <label for="formFile" class="form-label">Upload file</label>
        <div class="input-group">
            <input class="form-control" type="file" id="formFile"/>
            <button class="btn btn-primary" type="button" onclick="uploadFile()">Upload</button>
        </div>
        <div id="progress-bar" class="progress mt-2" style="display: none">
            <div id="progress" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </form>
}

<script>
    setWindowTitle("@Html.Raw(ViewBag.Title)");
    
    const chunkSize = 25 * 1000 * 1000;
    
    async function uploadFile()
    {
        let file = $("#formFile")[0].files[0];
        
        let uploadId = "";
        let curChunk = 0;
        let chunkCount = Math.ceil(file.size / chunkSize);
        
        console.log("Uploading file " + file.name + " with " + chunkCount + " chunks");
        
        $("#progress-bar").show();
        
        let progress = $("#progress");
        
        do {
            let formData = new FormData();
            
            formData.append("file", file.slice(curChunk * chunkSize, (curChunk + 1) * chunkSize), file.name);
            formData.append("chunk", curChunk.toString());
            formData.append("chunkCount", chunkCount.toString());
            formData.append("uploadId", uploadId);
            
            await $.ajax({
                url: "@Url.Action("UploadFile", "Dashboard")",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                xhr: function () {
                    let xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            let percentComplete = evt.loaded / evt.total;
                            console.log("Upload progress: " + percentComplete);
                            
                            let offset = (100 / chunkCount) * curChunk;
                            let value = (percentComplete * 100) / chunkCount;
                            
                            progress.css("width", value + offset + "%");
                            progress.html(Math.round(value + offset) + "%");
                        }
                    }, false);
                    return xhr;
                },
                success: function (result) {
                    console.log(result);
                    if (result.success) {
                        uploadId = result.uploadId;
                    }
                },
            });
            
            curChunk++;
        } while (curChunk < chunkCount);
    }
</script>