@model GudSafe.Data.ViewModels.AdminSettingsViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Admin Settings";
}

<div class="container">
    @Html.ValidationSummary()

    <h1 class="display-6 mb-1">Create new user</h1>
    <form id="createNewUser" class="mb-2">
        <div class="input-group has-validation">
            @Html.TextBoxFor(m => m.NewUserUsername, new {@class = "form-control", required = "required", type = "text", placeholder = "Username"})
            <button class="btn btn-gudsafe-primary" type="button" onclick="CreateNewUser()">Create User</button>
        </div>
    </form>

    <div class="input-group visually-hidden mb-4" id="generatedPasswordInfo">
        <span class="input-group-text">Generated password: </span>
        <input type="text" class="form-control" value="" readonly="readonly"/>
    </div>

    @if (Model.Users != null)
    {
        <h1 class="display-6 mb-1">Reset users password</h1>

        <form id="resetUserPassword" class="mb-2">
            @Html.LabelFor(m => m.SelectedUser, "Select user to reset password", new {@class = "form-label"})
            <div class="input-group has-validation">
                @Html.DropDownListFor(m => m.SelectedUser, selectList: new SelectList(Model.Users, "Value", "Text"), new {@class = "form-select"})
                <button class="btn btn-danger" type="button" onclick="ResetUserPassword()">Reset password</button>
            </div>
        </form>

        <div class="input-group visually-hidden" id="resetPasswordInfo">
            <span class="input-group-text">New password: </span>
            <input type="text" class="form-control" value="" readonly="readonly"/>
        </div>
    }
</div>

@section Scripts
{
    <script>
        function CreateNewUser() {
            let form = $("#createNewUser");
            let data = form.serialize();
            $("#generatedPasswordInfo").addClass("visually-hidden");
        
            $.ajax({
                url: "@Url.Action("CreateUser")",
                type: "POST",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: data,
                success: function (result) {
                    if (result.success) {
                        form.trigger("reset");
                        
                        $("#@Html.IdFor(m => m.SelectedUser)").empty();
                        $.each(result.model.users, function (index, item) {
                            $("#@Html.IdFor(m => m.SelectedUser)").append($('<option>', {value: item.value, text: item.text}));
                        });
                        
                        $("#generatedPasswordInfo input").val(result.model.newUserPassword);
                        $("#generatedPasswordInfo").removeClass("visually-hidden");
                    }
                },
            });
        }
        
        function ResetUserPassword()
        {
            let form = $("#resetUserPassword");
            let data = form.serialize();
            $("#resetPasswordInfo").addClass("visually-hidden");
            
            $.ajax({
                url: "@Url.Action("ResetPasswordOfUser")",
                type: "POST",
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: data,
                success: function (result) {
                    if (result.success) {
                        form.trigger("reset");
                        
                        $("#resetPasswordInfo input").val(result.model.resetUserPwNewPassword);
                        $("#resetPasswordInfo").removeClass("visually-hidden");
                    }
                },
            });
        }
    </script>
}