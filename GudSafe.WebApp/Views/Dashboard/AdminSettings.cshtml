@model GudSafe.Data.ViewModels.AdminSettingsViewModel

@{
    ViewData["Title"] = "Admin Settings";
}

<div class="container">
    @Html.ValidationSummary()

    <h1 class="display-6 mb-1">Create new user</h1>
    <form id="createNewUser" class="mb-2">
        <div class="input-group">
            @Html.TextBoxFor(m => m.NewUserUsername, new {@class = "form-control", required = "required", type = "text", placeholder = "Username"})
            <button class="btn btn-primary" type="button" onclick="CreateNewUser()">Create User</button>
        </div>
    </form>

    <div class="input-group visually-hidden mb-4" id="generatedPasswordInfo">
        <span class="input-group-text">Generated password</span>
        <input type="text" class="form-control" value="" readonly="readonly"/>
    </div>

    @if (Model.Users != null)
    {
        <h1 class="display-6 mb-1">User management</h1>

        <form id="userManagement" class="mb-2">
            @Html.LabelFor(m => m.SelectedUser, "Select user to edit", new {@class = "form-label"})
            <div class="input-group">
                @Html.DropDownListFor(m => m.SelectedUser, selectList: new SelectList(Model.Users, "Value", "Text"), new {@class = "form-select"})
                <button class="btn btn-warning" type="button" onclick="ResetUserPassword()">Reset password</button>
                <button class="btn btn-danger" type="button" data-bs-toggle="modal" data-bs-target="#deleteConfirmation">Delete?</button>
            </div>
        </form>

        <div class="input-group visually-hidden" id="resetPasswordInfo">
            <span class="input-group-text">New password</span>
            <input type="text" class="form-control" value="" readonly="readonly"/>
        </div>
    }
</div>

<div class="modal fade" id="deleteConfirmation" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationLabel">Are you sure?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete the selected user?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="DeleteUser()">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    setWindowTitle("@Html.Raw(ViewBag.Title)");

    function CreateNewUser() {
        let form = $("#createNewUser");
        let data = form.serialize();

        $.ajax({
            url: "@Url.Action("CreateUser")",
            type: "POST",
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: data,
            success: function (result) {
                if (result.success) {
                    form.trigger("reset");
    
                    $("#@Html.IdFor(m => m.SelectedUser)").empty();
                    $.each(result.model.users, function (index, item) {
                        $("#@Html.IdFor(m => m.SelectedUser)").append($('<option>', {value: item.value, text: item.text}));
                    });
    
                    $("#generatedPasswordInfo input").val(result.model.newUserPassword);
                    $("#generatedPasswordInfo").removeClass("visually-hidden");
                } else {
                    $("#generatedPasswordInfo").addClass("visually-hidden");
                }
            },
            error: function (xhr, status, error) {
                $("#generatedPasswordInfo").addClass("visually-hidden");
            }
        });
    }
    
    function ResetUserPassword() {
        let form = $("#userManagement");
        let data = form.serialize();
    
        $.ajax({
            url: "@Url.Action("ResetPasswordOfUser")",
            type: "POST",
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: data,
            success: function (result) {
                if (result.success) {
                    $("#resetPasswordInfo input").val(result.model.resetUserPwNewPassword);
                    $("#resetPasswordInfo").removeClass("visually-hidden");
                } else {
                    $("#resetPasswordInfo").addClass("visually-hidden");
                }
            },
            error: function (result) {
                $("#resetPasswordInfo").addClass("visually-hidden");
            }
        });
    }
    
    function DeleteUser() {
        let form = $("#userManagement");
        let data = form.serialize();
    
        let dialog = $("#deleteConfirmation");
        dialog.modal("hide");
    
        $.ajax({
            url: "@Url.Action("DeleteUser")",
            type: "POST",
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: data,
            success: function (result) {
                if (result.success) {
                    form.trigger("reset");
    
                    $("#@Html.IdFor(m => m.SelectedUser)").empty();
                    $.each(result.model.users, function (index, item) {
                        $("#@Html.IdFor(m => m.SelectedUser)").append($('<option>', {value: item.value, text: item.text}));
                    });
    
                    $("#resetPasswordInfo").addClass("visually-hidden");
                    $("#generatedPasswordInfo").addClass("visually-hidden");
                } else {
                    $("#resetPasswordInfo").addClass("visually-hidden");
                    $("#generatedPasswordInfo").addClass("visually-hidden");
                }
            },
            error: function (result) {
                $("#resetPasswordInfo").addClass("visually-hidden");
            }
        });
    }
</script>